---
# tasks file for terraform

- name: Check if terraform is installed
  shell: zsh -ic 'command -v terraform'
  register: is_terraform_installed
  ignore_errors: yes

- name: Check if the correct terraform version is installed
  shell: "terraform --version | grep 'Terraform v{{ version_terraform }}'"
  register: is_terraform_version_correct
  ignore_errors: yes
  when: is_terraform_installed.rc == 0

- name: Download the terraform binary
  ansible.builtin.unarchive:
    src: https://releases.hashicorp.com/terraform/{{ version_terraform }}/terraform_{{ version_terraform }}_linux_amd64.zip
    dest: /tmp
    remote_src: yes
  when: is_terraform_installed.rc != 0 or is_terraform_version_correct.rc != 0

- name: Install terraform
  command:
    cmd: mv /tmp/terraform /usr/local/bin/
  become: yes
  become_method: sudo
  when: is_terraform_installed.rc != 0 or is_terraform_version_correct.rc != 0

- name: Check if terragrunt is installed
  shell: zsh -ic 'command -v terragrunt'
  register: is_terragrunt_installed
  ignore_errors: yes

- name: Check if the correct terragrunt version is installed
  shell: "terragrunt --version | grep 'terragrunt v{{ version_terragrunt }}'"
  register: is_terragrunt_version_correct
  ignore_errors: yes
  when: is_terragrunt_installed.rc == 0

- name: Download the terragrunt binary
  get_url:
    url: https://github.com/gruntwork-io/terragrunt/releases/download/v{{ version_terragrunt }}/terragrunt_linux_amd64
    dest: /usr/local/bin/terragrunt
    mode: '0755'
  become: yes
  become_method: sudo
  when: is_terragrunt_installed.rc != 0 or is_terragrunt_version_correct.rc != 0
